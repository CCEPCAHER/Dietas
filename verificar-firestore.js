// Script de verificaci√≥n r√°pida de Firestore
function verificarFirestore() {
    console.log('=== VERIFICACI√ìN DE FIRESTORE ===');
    
    // Verificar que Firebase est√© inicializado
    if (typeof firebase === 'undefined') {
        console.error('‚ùå Firebase no est√° cargado');
        return;
    }
    console.log('‚úÖ Firebase est√° cargado');
    
    // Verificar que Firestore est√© disponible
    if (!window.firebaseDb) {
        console.error('‚ùå Firestore no est√° inicializado');
        return;
    }
    console.log('‚úÖ Firestore est√° inicializado');
    
    // Verificar autenticaci√≥n
    if (!window.authManager) {
        console.error('‚ùå AuthManager no est√° disponible');
        return;
    }
    
    const user = window.authManager.getCurrentUser();
    if (!user) {
        console.warn('‚ö†Ô∏è No hay usuario autenticado');
        console.log('Debes iniciar sesi√≥n primero');
        return;
    }
    console.log('‚úÖ Usuario autenticado:', user.email);
    
    // Probar lectura de clientes (colecci√≥n con permisos configurados)
    window.firebaseDb.collection('clientes')
        .where('nutricionistaId', '==', user.uid)
        .limit(1)
        .get()
        .then((snapshot) => {
            console.log('‚úÖ Conexi√≥n a Firestore funciona correctamente');
            console.log('üìä Clientes encontrados:', snapshot.size);
            
            if (snapshot.size === 0) {
                console.log('‚ÑπÔ∏è No tienes clientes registrados a√∫n');
            } else {
                snapshot.forEach(doc => {
                    console.log('üìÑ Cliente ID:', doc.id);
                    console.log('üìã Datos:', doc.data());
                });
            }
        })
        .catch((error) => {
            console.error('‚ùå Error de conexi√≥n:', error);
            console.error('C√≥digo:', error.code);
            console.error('Mensaje:', error.message);
            
            if (error.code === 'permission-denied') {
                console.error('‚ö†Ô∏è PROBLEMA: Permisos denegados');
                console.log('Soluci√≥n: Actualiza las reglas de Firestore en Firebase Console');
                console.log('Las reglas actuales deber√≠an permitir el acceso a clientes.');
            } else if (error.code === 'unavailable') {
                console.error('‚ö†Ô∏è PROBLEMA: Firestore no disponible');
                console.log('Soluci√≥n: Verifica tu conexi√≥n a internet');
            }
        });
}

// Exportar para uso en consola
window.verificarFirestore = verificarFirestore;

// Ejecutar verificaci√≥n despu√©s de un delay
setTimeout(() => {
    if (window.firebaseDb && window.authManager) {
        console.log('Ejecutando verificaci√≥n autom√°tica...');
        verificarFirestore();
    }
}, 2000);

console.log('Para verificar Firestore manualmente, ejecuta: verificarFirestore()');

